# -*- mode: yaml -*-

image:
  repository: {{ .Values.services.global.registry.repository | default "docker.io/rbkmoney" }}/wapi
  tag: 5909eba3e4ee8f0c27db5fa02e91f49f6a7dd74b
  pullPolicy: IfNotPresent

{{ if .Values.services.global.registry.imagePullSecret }}
imagePullSecrets:
  - name: {{ .Values.services.global.registry.imagePullSecret }}
{{ end }}

{{- if .Values.services.global.pcidss.taints.enabled }}
tolerations:
- key: "{{ .Values.services.global.pcidss.taints.key }}"
  operator: "Equal"
  value: "{{ .Values.services.global.pcidss.taints.value }}"
  effect: "NoSchedule"
{{- end }}

configMap:
  data:
    sys.config: |
      {{- readFile "sys.config" | nindent 6 }}
    erl_inetrc: |
      {{- tpl (readFile "../vm/erl_inetrc.gotmpl") . | nindent 6 }}
    fetchKeycloakPubkey: |
      {{- readFile "../api-common/fetch-keycloak-pubkey.sh" | nindent 6 }}
    vm.args: |
      {{- tpl (readFile "../vm/erl_vm_args.gotmpl") . | nindent 6 }}

secret:
  data:
    token_encryption_key1.jwk: |
      {{- readFile "../api-common/keys/token-encryption-keys/1.jwk" | nindent 6 }}
    wapi.privkey.pem: |
      {{- readFile "../api-common/keys/wapi.privkey.pem" | nindent 6 }}

apiInitContainers:
  enabled: true

volumeMounts:
  - name: config-volume
    mountPath: /opt/wapi/releases/0.0.1/sys.config
    subPath: sys.config
    readOnly: true
  - name: config-volume
    mountPath: /opt/wapi/releases/0.0.1/vm.args
    subPath: vm.args
    readOnly: true
  - name: config-volume
    mountPath: /opt/wapi/erl_inetrc
    subPath: erl_inetrc
    readOnly: true
  - name: secret
    mountPath: /var/lib/wapi/keys
    readOnly: true
  - name: keycloak-pubkey
    mountPath: /var/lib/wapi/keys/keycloak
    readOnly: true

volumes:
  - name: config-volume
    configMap:
      name: {{ .Release.Name }}
      defaultMode: 0755
  - name: secret
    secret:
      secretName: {{ .Release.Name }}
  - name: keycloak-pubkey
    emptyDir: {}

service:
  type: ClusterIP
  ports:
    - name: api
      port: 8080


{{ $domainWithNamespace := printf "%s.%s" .Release.Namespace .Values.services.ingress.rootDomain }}
{{ $ingressDomain := .Values.services.ingress.namespacedDomain | ternary $domainWithNamespace .Values.services.ingress.rootDomain }}

ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
{{- if .Values.services.ingress.tls.letsEncrypt.enabled }}
    cert-manager.io/cluster-issuer: {{ .Values.services.ingress.tls.letsEncrypt.issuer }}
{{- end }}
    kubernetes.io/ingress.class: {{ .Values.services.ingress.class | quote }}
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
       more_set_headers "Access-Control-Allow-Origin: $http_origin";
  hosts:
    - host: api.{{ $ingressDomain | default "rbk.dev" }}
      paths: 
        - /privdoc/v0
        - /payres/v0
{{- if .Values.services.ingress.tls.enabled }}
  tls:
  {{ if .Values.services.ingress.tls.letsEncrypt.enabled }}
    - secretName: api-{{ .Values.services.ingress.tls.secretName }}
  {{- else }}
    - secretName: {{ .Values.services.ingress.tls.secretName }}
  {{- end }}
      hosts:
        - api.{{ $ingressDomain | default "rbk.dev" }}
{{- end }}
  servicePort: 8080


ciliumPolicies:
  - filters:
    - port: 8022
      type: TCP
    name: bender
  - filters:
    - port: 8022
      type: TCP
    name: cds
  - filters:
    - port: 8080
      type: TCP
    name: keycloak
  - filters:
    - port: 8022
      type: TCP
    name: dominant
