# -*- mode: yaml -*-

replicaCount: 1

image:
  repository: {{ .Values.services.global.registry.repository | default "docker.io/rbkmoney" }}/payouter
  tag: a0e37ad47ee5563008d2af47c58a9f117e941db0
  pullPolicy: IfNotPresent

{{ if .Values.services.global.registry.imagePullSecret }}
imagePullSecrets:
  - name: {{ .Values.services.global.registry.imagePullSecret }}
{{ end }}

runopts:
  command: ["/opt/payouter/entrypoint.sh"]

env:
  - name: LOGBACK_SERVICE_NAME
    value: "payouter"

configMap:
  data: 
    entrypoint.sh: |
      {{- readFile "entrypoint.sh" | nindent 6 }}
    loggers.xml: |
      {{- readFile "loggers.xml" | nindent 6 }}
    logback.xml: |
      {{- readFile "../logs/logback.xml" | nindent 6 }}

volumes:
  - name: config-volume
    configMap:
      name: {{ .Release.Name }}
      defaultMode: 0755

volumeMounts:
  - name: config-volume
    mountPath: /opt/payouter/entrypoint.sh
    subPath: entrypoint.sh
    readOnly: true
  - name: config-volume
    mountPath: /opt/payouter/logback.xml
    subPath: logback.xml
    readOnly: true
  - name: config-volume
    mountPath: /opt/payouter/loggers.xml
    subPath: loggers.xml
    readOnly: true

service:
  ports:
    - name: api
      port: 8022
    - name: management
      port: 8023

livenessProbe: null
  # httpGet:
  #   path: /actuator/health
  #   port: management

readinessProbe: null
  # httpGet:
  #   path: /actuator/health
  #   port: management

podAnnotations:
  vault.hashicorp.com/role: "db-app"
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/agent-inject-secret-application.properties: "database/creds/db-app-payouter"
  vault.hashicorp.com/agent-inject-template-application.properties: |
    {{`{{- with secret "database/creds/db-app-payouter" -}}
    spring.datasource.url=jdbc:postgresql://postgres-postgresql:5432/payouter?sslmode=disable
    spring.datasource.username={{ .Data.username }}
    spring.datasource.password={{ .Data.password }}
    spring.flyway.url=jdbc:postgresql://postgres-postgresql:5432/payouter?sslmode=disable
    spring.flyway.user={{ .Data.username }}
    spring.flyway.password={{ .Data.password }}
    spring.datasource.hikari.data-source-properties.prepareThreshold=0
    spring.datasource.hikari.leak-detection-threshold=5300
    flyway.url=jdbc:postgresql://postgres-postgresql:5432/payouter?sslmode=disable
    flyway.user={{ .Data.username }}
    flyway.password={{ .Data.password }}
    flyway.schemas=sht
    spring.flyway.schemas=sht
    {{- end }}`}}

metrics:
  serviceMonitor:
    enabled: {{ .Values.services.global.metrics.enabled }}
    namespace: {{ .Release.Namespace }}
    additionalLabels:
      release: prometheus
    endpoints:
      - port: "management"
        path: /actuator/prometheus
        scheme: http

ciliumPolicies:
  - filters:
    - port: 5432
      type: TCP
    name: postgres
    namespace: {{ .Release.Namespace }}
  - filters:
    - port: 9092
      type: TCP
    name: kafka
    namespace: {{ .Release.Namespace }}
  - filters:
    - port: 8022
      type: TCP
    name: shumway
    namespace: {{ .Release.Namespace }}
  - filters:
    - port: 8022
      type: TCP
    name: dominant
    namespace: {{ .Release.Namespace }}
  - filters:
    - port: 8200
      type: TCP
    name: vault
    namespace: {{ .Release.Namespace }}
  - filters:
    - port: 8022
      type: TCP
    name: hellgate
    namespace: {{ .Release.Namespace }}
{{- /*
  - filters:
    - port: 8022
      type: TCP
    name: fault-detector
    namespace: {{ .Release.Namespace }}
*/ -}}
