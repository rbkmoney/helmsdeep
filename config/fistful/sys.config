[
    {kernel, [
        {logger_level, info},
        {logger, [
            {handler, default, logger_std_h, #{
                level => debug,
                config => #{
                    type => standard_io
                },
                filters => [{access_log, {fun logger_filters:domain/2, {stop, equal, [cowboy_access_log]}}}],
                formatter => {logger_logstash_formatter, #{}}
            }},
            {handler, access_logger, logger_std_h, #{
                level => info,
                config => #{
                    type => standard_io
                },
                filters => [{access_log, {fun logger_filters:domain/2, {stop, not_equal, [cowboy_access_log]}}}],
                formatter => {logger_logstash_formatter, #{}}
            }}
        ]}
    ]},

    {scoper, [
        {storage, scoper_storage_logger}
    ]},

    {dmt_client, [
        {max_cache_size, #{
            elements => 80,
            memory => 209715200 % 200Mb
        }},
        {cache_update_interval, 5000}, % milliseconds
        {cache_server_call_timeout, 30000}, % milliseconds
        {woody_event_handlers, [
            {scoper_woody_event_handler, #{
                event_handler_opts => #{
                    formatter_opts => #{
                        max_length => 1000,
                        max_printable_string_length => 80
                    }
                }
            }}
        ]},
        {service_urls, #{
            'Repository'       => <<"http://dominant:8022/v1/domain/repository">>,
            'RepositoryClient' => <<"http://dominant:8022/v1/domain/repository_client">>
        }}
    ]},

    {party_client, [
        {services, #{
            party_management => "http://party-management:8022/v1/processing/partymgmt"
        }},
        {woody, #{
            cache_mode => safe,  % disabled | safe | aggressive
            options => #{
                woody_client => #{
                    event_handler => {
                        scoper_woody_event_handler,
                            {scoper_event_handler_options, #{
                                event_handler_opts => #{
                                    formatter_opts => #{
                                        max_length => 1000,
                                        max_printable_string_length => 80
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }}
    ]},

    {fistful, [
        {providers, #{
            <<"test">> => #{
                routes => [<<"mocketbank">>],
                payment_institution_id => 1,
                identity_classes       => #{
                    <<"person">>          => #{
                        name                 => <<"Person">>,
                        contract_template_id => 1,
                        initial_level        => <<"anonymous">>,
                        levels               => #{
                            <<"anonymous">>     => #{
                                name               => <<"Anonymous">>,
                                contractor_level   => none
                            },
                            <<"partly-identified">> => #{
                                name               => <<"Partially identified">>,
                                contractor_level   => partial
                            },
                            <<"identified">>    => #{
                                name               => <<"Fully identified">>,
                                contractor_level   => full
                            }
                        },
                        challenges           => #{
                            <<"esia">>          => #{
                                name               => <<"Routine checkup">>,
                                base               => <<"anonymous">>,
                                target             => <<"partly-identified">>
                            }
                        }
                    },
                    <<"company">>          => #{
                        name                 => <<"Legal Entity">>,
                        contract_template_id => 1,
                        initial_level        => <<"identified">>,
                        levels               => #{
                            <<"identified">>    => #{
                                name               => <<"Fully identified">>,
                                contractor_level   => full
                            }
                        }
                    }
                }
            }
        }},
        {services, #{
            'accounter'      => "http://shumway:8022/shumpune",
            'identification' => "http://identification:8022/v1/identification",
            'binbase'        => "http://binbase:8022/v1/binbase",
            'eventsink'      => "http://machinegun:8022/v1/event_sink",
            'automaton'      => "http://machinegun:8022/v1/automaton"
        }}
    ]},

    {ff_server, [
        {ip, "::"},
        {port, 8022},
        {woody_opts, #{
            net_opts => [
                % Bump keepalive timeout up to a minute
                {timeout, 60000}
            ]
        }},
        {net_opts, [
            % Bump keepalive timeout up to a minute
            {timeout, 60000}
        ]},
        {health_check, #{
            disk    => {erl_health, disk     , ["/", 99]},
            memory  => {erl_health, cg_memory, [99]},
            service => {erl_health, service  , [<<"wapi">>]}
        }},
        {eventsink, #{
            identity => #{
                namespace => 'ff/identity'
            },
            wallet => #{
                namespace => 'ff/wallet_v2'
            },
            withdrawal => #{
                namespace => 'ff/withdrawal_v2'
            },
            deposit => #{
                namespace => 'ff/deposit_v1'
            },
            destination => #{
                namespace => 'ff/destination_v2'
            },
            source => #{
                namespace => 'ff/source_v1'
            },
            withdrawal_session => #{
                namespace => 'ff/withdrawal/session_v2'
            },
            w2w_transfer => #{
                namespace => 'ff/w2w_transfer_v1'
            }
        }}
    ]},

    {ff_transfer, [
        {max_session_poll_timeout, 14400}, % 4h
        {withdrawal,
            #{
                default_transient_errors => [
                    <<"authorization_failed">>
                ]
            }
        }
    ]},

    {bender_client, [
        {service_url, <<"http://bender:8022/v1/bender">>},
        {deadline, 30000}
    ]},

    {os_mon, [
        {disksup_posix_only, true}
    ]},
    %% TODO
    {snowflake, [{machine_id, 1}]},

    {prometheus, [
        {collectors, [default]}
    ]}
].
