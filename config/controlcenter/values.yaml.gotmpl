# -*- mode: yaml -*-
replicaCount: {{ .Values.services.global.statelessReplicas }}

image:
  repository: {{ .Values.services.global.registry.repository | default "docker.io/rbkmoney" }}/control-center
  tag: fc6dab6c0a1e40bc31ebc98bcd90e2899431251c
  pullPolicy: IfNotPresent

{{ if .Values.services.global.registry.imagePullSecret }}
imagePullSecrets:
  - name: {{ .Values.services.global.registry.imagePullSecret }}
{{ end }}

service:
  type: ClusterIP
  ports:
    - name: http
      port: 8080

configMap:
  data:
    appConfig.json: |
      {{- tpl (readFile "appConfig.json.gotmpl") . | nindent 6 }}
    authConfig.json: |
      {{- tpl (readFile "authConfig.json.gotmpl") . | nindent 6 }}
    control-center.conf: |
      {{- readFile "vhost.conf" | nindent 6 }}

volumeMounts:
  - name: config-volume
    mountPath: /usr/share/nginx/html/assets/appConfig.json
    subPath: appConfig.json
    readOnly: true
  - name: config-volume
    mountPath: /usr/share/nginx/html/assets/authConfig.json
    subPath: authConfig.json
    readOnly: true
  - name: config-volume
    mountPath: /etc/nginx/vhosts.d/control-center.conf
    subPath: control-center.conf
    readOnly: true

volumes:
  - name: config-volume
    configMap:
      name: {{ .Release.Name }}

livenessProbe:
  httpGet:
    path: /assets/appConfig.json
    port: http
  initialDelaySeconds: 30
  timeoutSeconds: 3
readinessProbe:
  httpGet:
    path: /assets/appConfig.json
    port: http
  initialDelaySeconds: 30
  timeoutSeconds: 3

{{ $domainWithNamespace := printf "%s.%s" .Release.Namespace .Values.services.ingress.rootDomain }}
{{ $ingressDomain := .Values.services.ingress.namespacedDomain | ternary $domainWithNamespace .Values.services.ingress.rootDomain }}

ingress:
  enabled: true
  annotations:
{{- if .Values.services.ingress.tls.letsEncrypt.enabled }}
    cert-manager.io/cluster-issuer: {{ .Values.services.ingress.tls.letsEncrypt.issuer }}
{{- end }}
    kubernetes.io/ingress.class: {{ .Values.services.ingress.class | quote }}
  hosts:
    - host: iddqd.{{ $ingressDomain | default "rbk.dev" }}
      paths:
        - /
{{- if .Values.services.ingress.tls.enabled }}
  tls:
  {{ if .Values.services.ingress.tls.letsEncrypt.enabled }}
    - secretName: iddqd-{{ .Values.services.ingress.tls.secretName }}
  {{- else }}
    - secretName: {{ .Values.services.ingress.tls.secretName }}
  {{- end }}
      hosts:
        - iddqd.{{ $ingressDomain | default "rbk.dev" }}
{{- end }}
  servicePort: 8080
