# -*- mode: yaml -*-

replicaCount: {{ .Values.services.global.pcidss.replicas }}

image:
  repository: {{ .Values.services.global.registry.repository | default "docker.io/rbkmoney" }}/dominant-cache
  tag: 732898cfbb20ccdffbf04c981dd6f5ddefdf7182
  pullPolicy: IfNotPresent

{{ if .Values.services.global.registry.imagePullSecret }}
imagePullSecrets:
  - name: {{ .Values.services.global.registry.imagePullSecret }}
{{ end }}

runopts:
  command: ["/opt/dominant-cache/entrypoint.sh"]

configMap:
  data:
    entrypoint.sh: |
      {{- tpl (readFile "entrypoint.sh.gotmpl") . | nindent 6 }}
    loggers.xml: |
      {{- readFile "loggers.xml" | nindent 6 }}
    logback.xml: |
      {{- readFile "../logs/logback.xml" | nindent 6 }}
      

runopts:
  command: ["/opt/dominant-cache/entrypoint.sh"]

configMap:
  data:
    entrypoint.sh: |
      {{- tpl (readFile "entrypoint.sh.gotmpl") . | nindent 6 }}
    loggers.xml: |
      {{- readFile "loggers.xml" | nindent 6 }}
    logback.xml: |
      {{- readFile "../logs/logback.xml" | nindent 6 }}

env:
  - name: LOGBACK_SERVICE_NAME
    value: "dominant-cache"
  - name: cert_identity_pass
    valueFrom:
      secretKeyRef:
        name: {{ .Release.Name }}
        key: identity_pass
  - name: cert_processing_pass
    valueFrom:
      secretKeyRef:
        name: {{ .Release.Name }}
        key: processing_pass

volumes:
  - name: config-volume
    configMap:
      name: {{ .Release.Name }}
      defaultMode: 0755


volumeMounts:
  - name: config-volume
    mountPath: /opt/dominant-cache/entrypoint.sh
    subPath: entrypoint.sh
    readOnly: true
  - name: config-volume
    mountPath: /opt/dominant-cache/logback.xml
    subPath: logback.xml
    readOnly: true
  - name: config-volume
    mountPath: /opt/dominant-cache/loggers.xml
    subPath: loggers.xml
    readOnly: true

service:
  ports:
    - name: api
      port: 8022
    - name: management
      port: 8023


livenessProbe:
  httpGet:
    path: /actuator/health
    port: management

readinessProbe:
  httpGet:
    path: /actuator/health
    port: management


{{ $domainWithNamespace := printf "%s.%s" .Release.Namespace .Values.services.ingress.rootDomain }}
{{ $ingressDomain := .Values.services.ingress.namespacedDomain | ternary $domainWithNamespace .Values.services.ingress.rootDomain }}

metrics:
  serviceMonitor:
    enabled: {{ .Values.services.global.metrics.enabled }}
    namespace: {{ .Release.Namespace }}
    additionalLabels:
      release: prometheus
    endpoints:
      - port: "management"
        path: /actuator/prometheus
        scheme: http

ingress:
  enabled: true
  annotations:
{{- if .Values.services.ingress.tls.letsEncrypt.enabled }}
    cert-manager.io/cluster-issuer: {{ .Values.services.ingress.tls.letsEncrypt.issuer }}
{{- end }}
    kubernetes.io/ingress.class: {{ .Values.services.ingress.class | quote }}
  hosts:
    - host: iddqd.{{ $ingressDomain | default "rbk.dev" }}
      paths:
        -  /v1/dominant/cache
{{- if .Values.services.ingress.tls.enabled }}
  tls:
  {{ if .Values.services.ingress.tls.letsEncrypt.enabled }}
    - secretName: iddqd-{{ .Values.services.ingress.tls.secretName }}
  {{- else }}
    - secretName: {{ .Values.services.ingress.tls.secretName }}
  {{- end }}
      hosts:
        - iddqd.{{ $ingressDomain | default "rbk.dev" }}
{{- end }}
  servicePort: 8022

ciliumPolicies:
  - filters:
    - port: 8022
      type: TCP
    name: shumway
  - filters:
    - port: 8022
      type: TCP
    name: machinegun
  - filters:
    - port: 8022
      type: TCP
    name: dominant
  - filters:
    - port: 8022
      type: TCP
    name: proxy-mocket-inspector
  - filters:
    - port: 8022
      type: TCP
    name: proxy-mocketbank