# -*- mode: yaml -*-

replicaCount: {{ .Values.services.global.statelessReplicas }}

image:
  repository: {{ .Values.services.global.registry.repository | default "docker.io/rbkmoney" }}/file-storage
  tag: d1d6c25f90d571a214eda243559cda5b8b78d9ec
  pullPolicy: IfNotPresent

{{ if .Values.services.global.registry.imagePullSecret }}
imagePullSecrets:
  - name: {{ .Values.services.global.registry.imagePullSecret }}
{{ end }}

runopts:
  command: ["/opt/file-storage/entrypoint.sh"]

env:
  - name: LOGBACK_SERVICE_NAME
    value: "file-storage"

configMap:
  data: 
    entrypoint.sh: |
      {{- tpl (readFile "entrypoint.sh.gotmpl") . | nindent 6 }}
    loggers.xml: |
      {{- readFile "loggers.xml" | nindent 6 }}
    logback.xml: |
      {{- readFile "../logs/logback.xml" | nindent 6 }}

volumes:
  - name: config-volume
    configMap:
      name: {{ .Release.Name }}
      defaultMode: 0755

volumeMounts:
  - name: config-volume
    mountPath: /opt/file-storage/entrypoint.sh
    subPath: entrypoint.sh
    readOnly: true
  - name: config-volume
    mountPath: /opt/file-storage/logback.xml
    subPath: logback.xml
    readOnly: true
  - name: config-volume
    mountPath: /opt/file-storage/loggers.xml
    subPath: loggers.xml
    readOnly: true

service:
  ports:
    - name: api
      port: 8022
    - name: management
      port: 8023

livenessProbe:
  httpGet:
    path: /actuator/health
    port: management

readinessProbe:
  httpGet:
    path: /actuator/health
    port: management

metrics:
  serviceMonitor:
    enabled: {{ .Values.services.global.metrics.enabled }}
    namespace: {{ .Release.Namespace }}
    additionalLabels:
      release: prometheus
    endpoints:
      - port: "management"
        path: /actuator/prometheus
        scheme: http

ciliumPolicies:
   - filters:
     - port: 9000
       type: TCP
     name: minio
     
