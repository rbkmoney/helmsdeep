operator:
{{- if .Values.services.global.ipv6only }}
  ipFamily: "IPv6"
{{- else -}}
  ipFamily: "IPv4"
{{- end }}

elastic:
  master:
    replicas: 1
    podTemplate:
      spec:
        nodeSelector: {}
        containers:
          - name: elasticsearch
            env:
              - name: ES_JAVA_OPTS
                value: -Xms1G -Xmx1G
              - name: READINESS_PROBE_TIMEOUT
                value: "10"
            resources:
              requests:
                memory: 2Gi
              limits:
                memory: 2Gi
            securityContext:
              capabilities:
                add:
                - SYS_CHROOT
            readinessProbe:
              exec:
                command:
                - bash
                - -c
                - /mnt/elastic-internal/scripts/readiness-probe-script.sh
              failureThreshold: 3
              initialDelaySeconds: 10
              periodSeconds: 12
              successThreshold: 1
              timeoutSeconds: 12
  data:
    replicas: 1
    podTemplate:
      spec:
        nodeSelector: {}
        containers:
          - name: elasticsearch
            env:
              - name: ES_JAVA_OPTS
                value: -Xms4G -Xmx4G
              - name: READINESS_PROBE_TIMEOUT
                value: "10"
            resources:
              requests:
                memory: 8Gi
              limits:
                memory: 8Gi
            securityContext:
              capabilities:
                add:
                - SYS_CHROOT
            readinessProbe:
              exec:
                command:
                - bash
                - -c
                - /mnt/elastic-internal/scripts/readiness-probe-script.sh
              failureThreshold: 3
              initialDelaySeconds: 10
              periodSeconds: 12
              successThreshold: 1
              timeoutSeconds: 12
 
filebeat:
    enabled: true

{{ $domainWithNamespace := printf "%s.%s" .Release.Namespace .Values.services.ingress.rootDomain }}
{{ $ingressDomain := .Values.services.ingress.namespacedDomain | ternary $domainWithNamespace .Values.services.ingress.rootDomain }}

ingress:
  enabled: true
  annotations:
{{- if .Values.services.ingress.tls.letsEncrypt.enabled }}
    cert-manager.io/cluster-issuer: {{ .Values.services.ingress.tls.letsEncrypt.issuer }}
{{- end }}
    kubernetes.io/ingress.class: {{ .Values.services.ingress.class | quote }}
  hosts:
    - host: kibana.{{ $ingressDomain | default "rbk.dev" }}
      paths:
        - /
{{- if .Values.services.ingress.tls.enabled }}
  tls:
  {{ if .Values.services.ingress.tls.letsEncrypt.enabled }}
    - secretName: kibana-{{ .Values.services.ingress.tls.secretName }}
  {{- else }}
    - secretName: {{ .Values.services.ingress.tls.secretName }}
  {{- end }}
      hosts:
        - kibana.{{ $ingressDomain | default "rbk.dev" }}
{{- end }}
  servicePort: 5601
