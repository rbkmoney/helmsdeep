# -*- mode: yaml -*-

replicaCount: 1

image:
  repository: {{ .Values.services.global.registry.repository | default "docker.io/rbkmoney" }}/capi-v2
  tag: bc6446611ef7af7c6a60f6de9ca5f4b896d1c004
  pullPolicy: IfNotPresent

{{ if .Values.services.global.registry.imagePullSecret }}
imagePullSecrets:
  - name: {{ .Values.services.global.registry.imagePullSecret }}
{{ end }}

configMap:
  data:
    sys.config: |
      {{- readFile "sys.config" | nindent 6 }}
    erl_inetrc: |
      {{- tpl (readFile "../vm/erl_inetrc.gotmpl") . | nindent 6 }}
    fetchKeycloakPubkey: |
      {{- readFile "../api-common/fetch-keycloak-pubkey.sh" | nindent 6 }}
    oopsBody1: |
      {{- readFile "../api-common/oops-bodies/sad-kitty1" | nindent 6 }}
    oopsBody2: |
      {{- readFile "../api-common/oops-bodies/sad-kitty2" | nindent 6 }}
    vm.args: |
      {{- tpl (readFile "../vm/erl_vm_args.gotmpl") . | nindent 6 }}

secret:
  data:
    token_encryption_key1.jwk: |
      {{- readFile "../api-common/keys/token-encryption-keys/1.jwk" | nindent 6 }}
    capi.privkey.pem: |
      {{- readFile "../api-common/keys/capi.privkey.pem" | nindent 6 }}

apiInitContainers:
  enabled: true

volumeMounts:
  - name: config-volume
    mountPath: /opt/capi/releases/0.1.0/sys.config
    subPath: sys.config
    readOnly: true
  - name: config-volume
    mountPath: /opt/capi/releases/0.1.0/vm.args
    subPath: vm.args
    readOnly: true
  - name: config-volume
    mountPath: /opt/capi/erl_inetrc
    subPath: erl_inetrc
    readOnly: true
  - name: config-volume
    mountPath: /var/lib/capi/oops-bodies/oopsBody1
    subPath: oopsBody1
    readOnly: true
  - name: config-volume
    mountPath: /var/lib/capi/oops-bodies/oopsBody2
    subPath: oopsBody2
    readOnly: true
  - name: secret
    mountPath: /var/lib/capi/keys
    readOnly: true
  - name: keycloak-pubkey
    mountPath: /var/lib/capi/keys/keycloak
    readOnly: true

volumes:
  - name: config-volume
    configMap:
      name: {{ .Release.Name }}
      defaultMode: 0755
  - name: secret
    secret:
      secretName: {{ .Release.Name }}
  - name: keycloak-pubkey
    emptyDir: {}

service:
  type: ClusterIP
  ports:
    - name: api
      port: 8080

metrics:
  serviceMonitor:
    enabled: {{ .Values.services.global.metrics.enabled }}
    namespace: {{ .Release.Namespace }}
    additionalLabels:
      release: prometheus

{{ $domainWithNamespace := printf "%s.%s" .Release.Namespace .Values.services.ingress.rootDomain }}
{{ $ingressDomain := .Values.services.ingress.namespacedDomain | ternary $domainWithNamespace .Values.services.ingress.rootDomain }}

ingress:
  enabled: true
  annotations:
{{- if .Values.services.ingress.tls.letsEncrypt.enabled }}
    cert-manager.io/cluster-issuer: {{ .Values.services.ingress.tls.letsEncrypt.issuer }}
{{- end }}
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Request-ID"
    kubernetes.io/ingress.class: {{ .Values.services.ingress.class | quote }}
  hosts:
    - host: api.{{ $ingressDomain | default "rbk.dev" }}
      paths:
        - /v2
{{- if .Values.services.ingress.tls.enabled }}
  tls:
  {{ if .Values.services.ingress.tls.letsEncrypt.enabled }}
    - secretName: api-{{ .Values.services.ingress.tls.secretName }}
  {{- else }}
    - secretName: {{ .Values.services.ingress.tls.secretName }}
  {{- end }}
      hosts:
        - api.{{ $ingressDomain | default "rbk.dev" }}
{{- end }}
  servicePort: 8080

ciliumPolicies:
  - filters:
    - port: 8080
      type: TCP
    name: keycloak
    namespace: {{ .Release.Namespace }}
  - filters:
    - port: 8022
      type: TCP
    name: bender
    namespace: {{ .Release.Namespace }}
  - filters:
    - port: 8022
      type: TCP
    name: shumway
    namespace: {{ .Release.Namespace }}
  - filters:
    - port: 8022
      type: TCP
    name: dominant
    namespace: {{ .Release.Namespace }}
  - filters:
    - port: 8022
      type: TCP
    name: hellgate
    namespace: {{ .Release.Namespace }}
  - filters:
    - port: 8022
      type: TCP
    name: bouncer
    namespace: {{ .Release.Namespace }}
  - filters:
    - port: 8022
      type: TCP
    name: party-management
    namespace: {{ .Release.Namespace }}
  - filters:
    - port: 8022
      type: TCP
    name: hooker
    namespace: {{ .Release.Namespace }}
  - filters:
    - port: 8022
      type: TCP
    name: hooker
    namespace: {{ .Release.Namespace }}
