# -*- mode: yaml -*-

replicaCount: 1

image:
  repository: {{ .Values.services.global.registry.repository | default "docker.io/rbkmoney" }}/machinegun
  tag: 9c3248a68fe530d23a8266057a40a1a339a161b8
  pullPolicy: IfNotPresent

{{ if .Values.services.global.registry.imagePullSecret }}
imagePullSecrets:
  - name: {{ .Values.services.global.registry.imagePullSecret }}
{{ end }}

configMap:
  data:
    config.yaml: |
      {{- tpl (readFile "config.yaml.gotmpl") . | nindent 6 }}

secret:
  data:
    cookie: "SomeV3ryRand0mStringForCoock1e"

volumes:
  - name: config-volume
    configMap:
      name: {{ .Release.Name }}
  - name: cookie-secret
    secret:
      secretName: {{ .Release.Name }}
{{- if .Values.services.kafka.ssl.enabled }}
  - name: kafka-cert
    secret:
      secretName: {{ .Release.Name }}-kafka-cert
  - name: kafka-ca
    secret:
      secretName: erl-kafka-ca
{{- end }}

volumeMounts:
  - name: config-volume
    mountPath: /opt/machinegun/etc/config.yaml
    subPath: config.yaml
    readOnly: true
  - name: cookie-secret
    mountPath: /opt/machinegun/etc/cookie
    subPath: cookie
    readOnly: true
{{- if .Values.services.kafka.ssl.enabled }}
  - name: kafka-ca
    subPath: ca.crt
    mountPath: /vault/secrets/ca.crt
    readOnly: true
  - name: kafka-cert
    mountPath: /vault/secrets/kafka/
    readOnly: true
{{- end }}

metrics:
  serviceMonitor:
    enabled: {{ .Values.services.global.metrics.enabled }}
    namespace: {{ .Release.Namespace }}
    additionalLabels:
      release: prometheus

ciliumPolicies:
  - filters:
    - port: 8500
      type: TCP
    name: consul
  - filters:
    - port: 9092
      type: TCP
    name: kafka
  - filters:
    - port: 8087
      type: TCP
    name: riak
  - filters:
    - port: 8022
      type: TCP
    name: bender
  - filters:
    - port: 8022
      type: TCP
    name: url-shortener
  - filters:
    - port: 8022
      type: TCP
    name: machinegun
  - filters:
    - port: 8022
      type: TCP
    name: dominant
  - filters:
    - port: 8022
      type: TCP
    name: hellgate
  - filters:
    - port: 8022
      type: TCP
    name: party-management

{{ $domainWithNamespace := printf "%s.%s" .Release.Namespace .Values.services.ingress.rootDomain }}
{{ $ingressDomain := .Values.services.ingress.namespacedDomain | ternary $domainWithNamespace .Values.services.ingress.rootDomain }}

ingress:
  enabled: true
  annotations:
{{- if .Values.services.ingress.tls.letsEncrypt.enabled }}
    cert-manager.io/cluster-issuer: {{ .Values.services.ingress.tls.letsEncrypt.issuer }}
{{- end }}
    kubernetes.io/ingress.class: {{ .Values.services.ingress.class | quote }}
  hosts:
    - host: iddqd.{{ $ingressDomain | default "rbk.dev" }}
      paths:
        - /v1/automaton
{{- if .Values.services.ingress.tls.enabled }}
  tls:
  {{ if .Values.services.ingress.tls.letsEncrypt.enabled }}
    - secretName: iddqd-{{ .Values.services.ingress.tls.secretName }}
  {{- else }}
    - secretName: {{ .Values.services.ingress.tls.secretName }}
  {{- end }}
      hosts:
        - iddqd.{{ $ingressDomain | default "rbk.dev" }}
{{- end }}
  servicePort: 8022

{{/*
      rules:
        kafka:
        - role: produce
          topics:
            - mg-events-cashreg
            - mg-events-customer
            - mg-events-ff-deposit
            - mg-events-ff-destination
            - mg-events-ff-identity
            - mg-events-ff-p2p-template
            - mg-events-ff-p2p-transfer
            - mg-events-ff-p2p-transfer-session
            - mg-events-ff-source
            - mg-events-ff-w2w-transfer
            - mg-events-ff-wallet
            - mg-events-ff-withdrawal
            - mg-events-ff-withdrawal-session
            - mg-events-invoice
            - mg-events-invoice-template
            - mg-events-party
            - mg-events-rates
            - mg-events-recurrent-paytools
            - mg-events-schedulers
*/}}
