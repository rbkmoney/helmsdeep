%% -*- mode: erlang -*-
[
    {kernel, [
        {logger_level, info},
        {logger, [
            {handler, default, logger_std_h, #{
                level => info,
                config => #{
                    type => standard_io
                },
                filters => [{access_log, {fun logger_filters:domain/2, {stop, equal, [cowboy_access_log]}}}],
                formatter => {logger_logstash_formatter, #{}}
            }},
            {handler, access_logger, logger_std_h, #{
                level => info,
                config => #{
                    type => standard_io
                },
                filters => [{access_log, {fun logger_filters:domain/2, {stop, not_equal, [cowboy_access_log]}}}],
                formatter => {logger_logstash_formatter, #{
                    message_redaction_regex_list => [
                        %% PAN
                        "(?<=\\W[2-6][0-9]{5})[0-9]{1,11}(?=[0-9]{2}\\W)",
                        %% Expiration date
                        "(?<=\\W)[0-9]{1,2}[\\s.,-/]([0-9]{2}|2[0-9]{3})(?=\\W)",
                        %% CVV / CVV2 / CSC
                        "(?<=\\W)[0-9]{3,4}(?=\\W)"
                    ]
                }}
            }}
        ]}
    ]},

    {scoper, [
        {storage, scoper_storage_logger}
    ]},

    {binapi, [
        {ip, "::"},
        {port, 8080},
        {service_type, real},
        {access_conf, #{
            jwt => #{
                signee => binapi,
                keyset => #{
                    keycloak => #{
                        source => {pem_file, "/var/lib/binapi/keys/keycloak/keycloak.pubkey.pem"}
                    }
                }
            }
        }},
        {oops_bodies, #{
            500 => "/var/lib/binapi/oops-bodies/oopsBody1",
            501 => "/var/lib/binapi/oops-bodies/oopsBody1",
            502 => "/var/lib/binapi/oops-bodies/oopsBody1",
            503 => "/var/lib/binapi/oops-bodies/oopsBody2",
            504 => "/var/lib/binapi/oops-bodies/oopsBody2"
        }},
        {health_check, #{
            disk => {erl_health, disk, ["/", 99]},
            memory => {erl_health, cg_memory, [70]},
            service => {erl_health, service, [<<"binapi">>]}
        }},
        {max_request_deadline, 60000} % milliseconds
    ]},

    {binapi_woody_client, [
        {service_urls, #{
            binbase => "http://binbase:8022/v1/binbase"
        }},
        {service_deadlines, #{
            merchant_stat => 30000, % milliseconds
            reporting => 30000, % milliseconds
            analytics => 30000, % milliseconds
            party_shop => 10000 % milliseconds
        }}
    ]},

    {how_are_you, [
        {metrics_publishers, []}
    ]},

    {os_mon, [
        {disksup_posix_only, true}
    ]},

    {snowflake, [{machine_id, hostname_hash}]},

    {prometheus, [
        {collectors, [default]}
    ]}
].
