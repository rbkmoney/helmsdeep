# -*- mode: yaml -*-

replicaCount: 1

image:
  repository: {{ .Values.services.global.registry.repository | default "docker.io/rbkmoney" }}/claim-management
  tag: 657db25265e028fd7f18f3c209bb2bc847abacda
  pullPolicy: IfNotPresent

{{ if .Values.services.global.registry.imagePullSecret }}
imagePullSecrets:
  - name: {{ .Values.services.global.registry.imagePullSecret }}
{{ end }}

runopts:
  command: ["/opt/claim-management/entrypoint.sh"]

configMap:
  data:
    entrypoint.sh: |
      {{- tpl (readFile "entrypoint.sh.gotmpl") . | nindent 6 }}
    loggers.xml: |
      {{- readFile "loggers.xml" | nindent 6 }}
    logback.xml: |
      {{- readFile "../logs/logback.xml" | nindent 6 }}

{{- if or .Values.services.postgres.external .Values.services.kafka.ssl.enabled }}
secret:
  data: 
    db_config: |
    {{- if or .Values.services.postgres.external }}
      spring.datasource.url=jdbc:postgresql://{{ .Values.services.postgres.endpoint | default "external-postgres" }}:5432/claimmng?sslmode=disable
      spring.datasource.username={{ .Values.services.postgres.uniUser }}
      spring.datasource.password={{ .Values.services.postgres.uniPassword }}
      spring.flyway.url=jdbc:postgresql://{{ .Values.services.postgres.endpoint | default "external-postgres" }}:5432/claimmng?sslmode=disable
      spring.flyway.user={{ .Values.services.postgres.uniUser }}
      spring.flyway.password={{ .Values.services.postgres.uniPassword }}
      spring.flyway.schemas=cm
      flyway.schemas=cm
    {{- end }}
    {{- if .Values.services.kafka.ssl.enabled }}
      kafka.ssl.enabled=true
      kafka.ssl.key-store-location=/vault/secrets/kafka-keystore.p12
      kafka.ssl.key-store-password={{ .Values.services.kafka.ssl.keystorePass }}
      kafka.ssl.key-password={{ .Values.services.kafka.ssl.keyPass }}
      kafka.ssl.key-store-type=PKCS12
      kafka.ssl.trust-store-location=/vault/secrets/kafka-truststore.p12
      kafka.ssl.trust-store-password={{ .Values.services.kafka.ssl.truststorePass }}
      kafka.ssl.trust-store-type=PKCS12
    {{- end }}
{{- end }}

volumes:
  - name: config-volume
    configMap:
      name: {{ .Release.Name }}
      defaultMode: 0755
{{- if .Values.services.kafka.ssl.enabled }}
  - name: kafka-cert
    secret:
      secretName: {{ .Release.Name }}-kafka-cert
  - name: kafka-ca
    secret:
      secretName: java-ca-kafka
{{- end }}
{{- if or .Values.services.postgres.external .Values.services.kafka.ssl.enabled }}
  - name: secret
    secret:
      secretName: {{ .Release.Name }}
{{- end }}

volumeMounts:
  - name: config-volume
    mountPath: /opt/claim-management/entrypoint.sh
    subPath: entrypoint.sh
    readOnly: true
  - name: config-volume
    mountPath: /opt/claim-management/logback.xml
    subPath: logback.xml
    readOnly: true
  - name: config-volume
    mountPath: /opt/claim-management/loggers.xml
    subPath: loggers.xml
    readOnly: true
{{- if .Values.services.kafka.ssl.enabled }}
  - name: kafka-ca
    subPath: kafka-truststore.p12
    mountPath: /vault/secrets/kafka-truststore.p12
    readOnly: true
  - name: kafka-cert
    subPath: {{ .Release.Name }}.p12
    mountPath: /vault/secrets/kafka-keystore.p12
    readOnly: true
{{- end }}
{{- if or .Values.services.postgres.external .Values.services.kafka.ssl.enabled }}
  - name: secret
    subPath: db_config
    mountPath: /vault/secrets/application.properties
    readOnly: true
{{- end }}

service:
  ports:
    - name: api
      port: 8022
    - name: management
      port: 8023

livenessProbe:
  httpGet:
    path: /actuator/health
    port: management

readinessProbe:
  httpGet:
    path: /actuator/health
    port: management

{{- if .Values.services.vault.enabled }}
podAnnotations:
  vault.hashicorp.com/role: "db-app"
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/agent-inject-secret-application.properties: "database/creds/db-app-claim-management"
  vault.hashicorp.com/agent-inject-template-application.properties: |
    {{`{{- with secret "database/creds/db-app-claim-management" -}}
    spring.datasource.url=jdbc:postgresql://postgres-postgresql:5432/claimmng?sslmode=disable
    spring.datasource.username={{ .Data.username }}
    spring.datasource.password={{ .Data.password }}
    spring.flyway.url=jdbc:postgresql://postgres-postgresql:5432/claimmng?sslmode=disable
    spring.flyway.user={{ .Data.username }}
    spring.flyway.password={{ .Data.password }}
    spring.flyway.schemas=cm
    flyway.schemas=cm
    {{- end }}`}}
{{- end }}

metrics:
  serviceMonitor:
    enabled: {{ .Values.services.global.metrics.enabled }}
    namespace: {{ .Release.Namespace }}
    additionalLabels:
      release: prometheus
    endpoints:
      - port: "management"
        path: /actuator/prometheus
        scheme: http

{{ $domainWithNamespace := printf "%s.%s" .Release.Namespace .Values.services.ingress.rootDomain }}
{{ $ingressDomain := .Values.services.ingress.namespacedDomain | ternary $domainWithNamespace .Values.services.ingress.rootDomain }}

ingress:
  enabled: true
  annotations:
{{- if .Values.services.ingress.tls.letsEncrypt.enabled }}
    cert-manager.io/cluster-issuer: {{ .Values.services.ingress.tls.letsEncrypt.issuer }}
{{- end }}
    kubernetes.io/ingress.class: {{ .Values.services.ingress.class | quote }}
  hosts:
    - host: iddqd.{{ $ingressDomain | default "rbk.dev" }}
      paths:
        - /v1/cm
{{- if .Values.services.ingress.tls.enabled }}
  tls:
  {{ if .Values.services.ingress.tls.letsEncrypt.enabled }}
    - secretName: iddqd-{{ .Values.services.ingress.tls.secretName }}
  {{- else }}
    - secretName: {{ .Values.services.ingress.tls.secretName }}
  {{- end }}
      hosts:
        - iddqd.{{ $ingressDomain | default "rbk.dev" }}
{{- end }}
  servicePort: 8022

ciliumPolicies:
  - filters:
    - port: 5432
      type: TCP
    name: postgres
    namespace: {{ .Release.Namespace }}
  - filters:
    - port: 9092
      rules:
        kafka:
        - role: consume
          topics:
            - claim-event-sink
      type: TCP
    name: kafka
    namespace: {{ .Release.Namespace }}
  - filters:
    - port: 8200
      type: TCP
    name: vault
    namespace: {{ .Release.Namespace }}
  - filters:
    - port: 8022
      type: TCP
    name: hellgate
    namespace: {{ .Release.Namespace }}

